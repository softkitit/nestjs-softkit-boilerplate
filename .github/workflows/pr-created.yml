name: PR on main

permissions:
  contents: write
  pull-requests: write
  id-token: write

on:
  pull_request:
    branches:
      - main
    types: [ opened, reopened, synchronize ]

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.define-envs.outputs.environments }}
      base-name: ${{ steps.define-envs.outputs.base-name }}

    steps:
      - name: Define envs information
        id: define-envs
        run: |
            echo environments='${{ startsWith(github.head_ref, 'release/') && vars.RELEASE_ENVIRONMENTS || vars.DEV_ENVIRONMENTS }}' >> $GITHUB_OUTPUT
            echo base-name=${{ startsWith(github.head_ref, 'release/') && 'last-release' || 'main' }} >> $GITHUB_OUTPUT

  lint-and-run-tests:
    needs: [ prepare ]
    runs-on: ubuntu-latest
    outputs:
        affected-projects: ${{ steps.get-affected-projects.outputs.affected-projects }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Install environment
        run: yarn install

      - name: Run lint
        run: npx nx affected:lint --base="${{ needs.prepare.outputs.base-name }}"

      - name: Pull postgres image, before running tests
        run: docker pull postgres:15.4-alpine

      - name: Verify changed apps and libraries are buildable
        run: npx nx affected:build --base="${{ needs.prepare.outputs.base-name }}"

      - name: Tests coverage
        run: npx nx affected:test --base="${{ needs.prepare.outputs.base-name }}" --codeCoverage

      - name: Get affected projects
        id: get-affected-projects
        run: echo affected-projects=$(npx nx show projects --json --affected --type app --with-target build --base ${{ needs.prepare.outputs.base-name }}) >> $GITHUB_OUTPUT

  init-state-app:
    needs: [ lint-and-run-tests, prepare ]
    strategy:
      matrix:
        environment: ${{ fromJson(needs.prepare.outputs.environments) }}
        project: ${{ fromJson(needs.lint-and-run-tests.outputs.affected-projects) }}
    uses: softkitit/github-actions-terraform/.github/workflows/controller-initialize-terraform-state.yml@main
    with:
      organization: ${{ github.event.repository.owner.login }}
      repository-name: ${{ github.event.repository.name }}
      project-name: ${{ matrix.project }}
      environment: ${{ matrix.environment }}
      terraform-folder: apps/${{ matrix.project }}/terraform
    secrets: inherit

  init-state-ci:
    needs: [lint-and-run-tests, init-state-app]
    strategy:
      matrix:
        environment: ["deployment"]
        project: ${{ fromJson(needs.lint-and-run-tests.outputs.affected-projects) }}
    uses: softkitit/github-actions-terraform/.github/workflows/controller-initialize-terraform-state.yml@main
    with:
      organization: ${{ github.event.repository.owner.login }}
      repository-name: ${{ github.event.repository.name }}
      project-name: ${{ matrix.project }}
      environment: ${{ matrix.environment }}
      terraform-folder: apps/${{ matrix.project }}/terraform-ci
    secrets: inherit

  plan-app:
    needs: [lint-and-run-tests, init-state-app, prepare]
    strategy:
      matrix:
        environment: ${{ fromJson(needs.prepare.outputs.environments) }}
        project: ${{ fromJson(needs.lint-and-run-tests.outputs.affected-projects) }}
    uses: softkitit/github-actions-terraform/.github/workflows/ci-terraform-plan-and-format.yml@main
    with:
      environment: ${{ matrix.environment }}
      terraform-folder: apps/${{ matrix.project }}/terraform
      override-plan-comment: false
    secrets: inherit

  plan-ci:
    needs: [lint-and-run-tests, init-state-ci]
    strategy:
      matrix:
        environment: ["deployment"]
        project: ${{ fromJson(needs.lint-and-run-tests.outputs.affected-projects) }}
    uses: softkitit/github-actions-terraform/.github/workflows/ci-terraform-plan-and-format.yml@main
    with:
      environment: ${{ matrix.environment }}
      terraform-folder: apps/${{ matrix.project }}/terraform-ci
      override-plan-comment: false
    secrets: inherit


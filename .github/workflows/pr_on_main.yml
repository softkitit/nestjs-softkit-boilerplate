# File for Pull Request on main branch
name: PR on main

# When a PR is opened to main
on:
  pull_request:
    branches:
      - main
    types: [ opened, reopened, synchronize ]


jobs:
  build:
    # Setup OS and Node Version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Latest node only
        node-version: [ 20.x ]

    # Define Steps
    steps:
      # Checkout code
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - uses: volta-cli/action@v4
        with:
          package-json-path: '${{ github.workspace }}/package.json'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **\node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-


      - name: Install environment
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Run lint
        run: npx nx affected:lint --base="origin/main"

      - name: Pull postgres image, before running tests
        run: docker pull postgres:15.4-alpine

      - name: Tests coverage
        run: npx nx affected:test --base="origin/main" --codeCoverage --parallel=false
